#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define MAX_REQUESTS 100

// Function to calculate the total seek time for C-SCAN scheduling
int calculateTotalSeekTime(int requests[], int numRequests, int initialPosition, int maxTrack) {
    int totalSeekTime = 0;
    int currentTrack = initialPosition;

    // Sort requests in ascending order
    for (int i = 0; i < numRequests - 1; i++) {
        for (int j = 0; j < numRequests - i - 1; j++) {
            if (requests[j] > requests[j + 1]) {
                int temp = requests[j];
                requests[j] = requests[j + 1];
                requests[j + 1] = temp;
            }
        }
    }

    // Find the index of the request closest to the initial position
    int index = 0;
    for (int i = 0; i < numRequests; i++) {
        if (requests[i] >= initialPosition) {
            index = i;
            break;
        }
    }

    // Service requests until the end of the disk is reached
    for (int i = index; i < numRequests; i++) {
        totalSeekTime += abs(requests[i] - currentTrack);
        currentTrack = requests[i];
    }

    // Move to the other end of the disk
    totalSeekTime += maxTrack - currentTrack;

    // Service requests from the beginning of the disk
    currentTrack = 0;
    for (int i = 0; i < index; i++) {
        totalSeekTime += abs(requests[i] - currentTrack);
        currentTrack = requests[i];
    }

    return totalSeekTime;
}

int main() {
    int requests[MAX_REQUESTS];
    int numRequests;
    int initialPosition;
    int maxTrack;

    // Input the number of requests
    printf("Enter the number of disk requests: ");
    scanf("%d", &numRequests);

    // Input the disk requests
    printf("Enter the disk requests:\n");
    for (int i = 0; i < numRequests; i++) {
        scanf("%d", &requests[i]);
    }

    // Input the initial position of the disk head
    printf("Enter the initial position of the disk head: ");
    scanf("%d", &initialPosition);

    // Input the maximum track of the disk
    printf("Enter the maximum track of the disk: ");
    scanf("%d", &maxTrack);

    // Calculate and display the total seek time for C-SCAN algorithm
    int totalSeekTime = calculateTotalSeekTime(requests, numRequests, initialPosition, maxTrack);
    printf("Total seek time using C-SCAN: %d\n", totalSeekTime);

    return 0;
}
