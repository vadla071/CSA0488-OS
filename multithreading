#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

#define NUM_THREADS 5

// Function executed by each thread
void *threadFunction(void *arg) {
    int thread_id = *((int *)arg);
    printf("Thread %d: Hello, World!\n", thread_id);
    pthread_exit(NULL);
}

int main() {
    pthread_t threads[NUM_THREADS];
    int thread_args[NUM_THREADS];
    int result_code, i;

    // Create multiple threads
    for (i = 0; i < NUM_THREADS; i++) {
        thread_args[i] = i;
        result_code = pthread_create(&threads[i], NULL, threadFunction, &thread_args[i]);
        if (result_code != 0) {
            perror("pthread_create");
            exit(1);
        }
    }

    // Wait for all threads to finish
    for (i = 0; i < NUM_THREADS; i++) {
        result_code = pthread_join(threads[i], NULL);
        if (result_code != 0) {
            perror("pthread_join");
            exit(1);
        }
    }

    printf("Main: All threads have completed their execution.\n");

    return 0;
}
