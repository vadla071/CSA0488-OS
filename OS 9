#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>
#include <sys/wait.h>

#define SHMSZ 27

int main() {
    char c;
    int shmid;
    key_t key;
    char *shm, *s;

    key = 5678;

    if ((shmid = shmget(key, SHMSZ, IPC_CREAT | 0666)) < 0) {
        perror("shmget");
        exit(1);
    }

    if ((shm = shmat(shmid, NULL, 0)) == (char *) -1) {
        perror("shmat");
        exit(1);
    }

    s = shm;
    for (c = 'a'; c <= 'z'; c++)
        *s++ = c;
    *s = '\0';

    *shm = '*';

    pid_t pid = fork();

    if (pid == 0) { // Child process
        while (*shm != '*')
            sleep(1);

        *shm = 'a';
        exit(0);
    } else if (pid > 0) { // Parent process
        wait(NULL);

        for (s = shm; *s != '\0'; s++)
            putchar(*s);
        putchar('\n');
    } else { // Error
        perror("fork");
        exit(1);
    }

    shmdt(shm);
    shmctl(shmid, IPC_RMID, NULL);

    return 0;
}
